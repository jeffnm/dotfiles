"
" Plugins
"

" Install the plugin manager and the plugins
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Load the plugins
call plug#begin()
Plug 'elmcast/elm-vim'
Plug 'w0rp/ale'
Plug 'itchyny/lightline.vim'
Plug 'tpope/vim-surround'
Plug 'morhetz/gruvbox'
Plug 'scrooloose/nerdtree'
Plug 'airblade/vim-gitgutter'
Plug 'pangloss/vim-javascript'
Plug 'MaxMEllon/vim-jsx-pretty'
Plug 'elzr/vim-json'
Plug 'leafgarland/typescript-vim'
Plug 'stephpy/vim-yaml'
call plug#end()

"
" Other configurations
"

if has('mouse_sgr')
    set ttymouse=sgr
endif

syntax on
colorscheme desert
"colorscheme gruvbox

" Basic settings
set encoding=UTF-8
set nocompatible
set number 
set relativenumber
set autochdir
set showmatch
set mouse=a
set splitright
set splitbelow
set termguicolors

" Set leader key to space (more accessible than default \)
let mapleader = " "

" Leader shortcuts
nnoremap <leader>/ :nohlsearch<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>e :NERDTreeToggle<CR>
nnoremap <leader>h <C-w>h
nnoremap <leader>j <C-w>j
nnoremap <leader>k <C-w>k
nnoremap <leader>l <C-w>l
nnoremap <leader>v :vsplit<CR>
nnoremap <leader>s :split<CR>

" Search settings
set ignorecase
set smartcase
set incsearch
set hlsearch
" Clear search highlighting with Space + /

" Spaces & Tabs
set tabstop=2
set softtabstop=2
set expandtab
set autoindent      " Auto-indent new lines
set smartindent     " Enable smart-indent

" Better command-line completion
set wildmenu
set wildmode=longest:full,full

" Quality of life improvements
set undofile
set hidden
set scrolloff=8
set sidescrolloff=8
set clipboard=unnamed
set backspace=indent,eol,start  " Sensible backspace behavior
set confirm                     " Ask to save instead of failing cmd due to unsaved changes
set visualbell                  " Flash the screen instead of beeping
set noerrorbells               " Disable error bells
set history=1000               " More command history
set updatetime=300             " Faster completion
set timeoutlen=500             " Faster key sequence completion

" Status line improvements
set laststatus=2               " Always show status line
set ruler                      " Show cursor position
set showcmd                    " Show incomplete commands

" Folding
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max
" space open/closes folds
" nnoremap <space> za
set foldmethod=indent   " fold based on indent level

" Tab completion for files/buffers
set wildmode=longest,list
set wildmenu

" quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" ALE Configuration
let g:ale_fix_on_save = 1
let g:ale_sign_error = '✘'
let g:ale_sign_warning = '⚠'
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'typescript': ['tsserver', 'eslint'],
\   'python': ['pylint'],
\   'elm': ['elm-make']
\}
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['prettier'],
\   'typescript': ['prettier'],
\   'python': ['black'],
\   'elm': ['elm-format']
\}

" Backup and swap file configuration
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//

" toggle nerdtree with F6
nmap <F6> :NERDTreeToggle<CR>
" auto open nerdtree if no file is specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" auto close vim if nerdtree is the only thing still open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" fix color suppor for alacritty
"
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48:2;%lu;%lu;%lum"

if exists("g:loaded_webdevicons")
  call webdevicons#refresh()
endif
